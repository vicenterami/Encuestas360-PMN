"""Primera migracion

Revision ID: f6486e1e7314
Revises: 
Create Date: 2025-05-10 19:27:31.693794

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f6486e1e7314'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # Eliminar la tabla 'genders' con CASCADE
    op.execute('DROP TABLE genders CASCADE')


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('survey_types',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('survey_types_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('customer_satisfaction', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('marketing', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='survey_types_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('responses',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('response', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('response_choice', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('question_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], name='responses_question_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='responses_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='responses_pkey')
    )
    op.create_table('questions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('question', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('survey_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('question_type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['question_type_id'], ['question_types.id'], name='questions_question_type_id_fkey'),
    sa.ForeignKeyConstraint(['survey_id'], ['surveys.id'], name='questions_survey_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='questions_pkey')
    )
    op.create_table('addresses',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('addresses_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('address', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='addresses_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('phone_number', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('address_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gender_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['addresses.id'], name='users_address_id_fkey'),
    sa.ForeignKeyConstraint(['gender_id'], ['genders.id'], name='users_gender_id_fkey'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='users_role_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('question_types',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('alternatives', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('essay_questions', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='question_types_pkey')
    )
    op.create_table('roles',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('roles_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('admin', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='roles_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('states',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('states_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('archived', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='states_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('surveys',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('state_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('survey_type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['state_id'], ['states.id'], name='surveys_state_id_fkey'),
    sa.ForeignKeyConstraint(['survey_type_id'], ['survey_types.id'], name='surveys_survey_type_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='surveys_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='surveys_pkey')
    )
    op.create_table('genders',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('gender', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='genders_pkey')
    )
    # ### end Alembic commands ###
